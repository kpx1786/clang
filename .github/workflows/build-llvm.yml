name: Build Latest Clang for Termux

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Build Clang
      run: |
        # 克隆 Termux 的包构建仓库
        git clone https://github.com/termux/termux-packages.git
        cd termux-packages
        
        # 设置构建环境
        ./scripts/setup-ubuntu.sh
        
        # 修改 LLVM 包配置以使用最新版本
        sed -i 's/TERMUX_PKG_VERSION=.*/TERMUX_PKG_VERSION=18.1.1/' packages/llvm/build.sh
        sed -i 's/TERMUX_PKG_REVISION=.*/TERMUX_PKG_REVISION=1/' packages/llvm/build.sh
        
        # 更新源码下载链接
        sed -i 's|TERMUX_PKG_SRCURL=.*|TERMUX_PKG_SRCURL=https://github.com/llvm/llvm-project/releases/download/llvmorg-${TERMUX_PKG_VERSION}/llvm-project-${TERMUX_PKG_VERSION}.src.tar.xz|' packages/llvm/build.sh
        
        # 构建 LLVM/Clang
        ./build-package.sh -a arm64 -f llvm

    - name: Package artifacts
      run: |
        mkdir -p artifacts
        cp termux-packages/debs/llvm*.deb artifacts/
        
    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: llvm-clang-termux-arm64
        path: artifacts/*.deb
        
    - name: Create Release
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      uses: softprops/action-gh-release@v1
      with:
        files: artifacts/*.deb
        tag_name: v${{ github.run_number }}
        name: Latest Clang for Termux ARM64 v${{ github.run_number }}
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
