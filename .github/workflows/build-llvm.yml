name: Build Latest Clang for Termux

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Android NDK
      uses: nttld/setup-ndk@v1
      id: setup-ndk
      with:
        ndk-version: r27c  # 更新到 27c 版本
        add-to-path: false

    - name: Install Rust and Cargo
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true
    
    - name: Build Clang
      env:
        NDK: ${{ steps.setup-ndk.outputs.ndk-path }}
      run: |
        # 安装基本依赖
        sudo apt-get update
        sudo apt-get install -y \
          build-essential \
          git \
          curl \
          wget \
          pkg-config \
          python3 \
          python3-pip \
          ninja-build \
          cmake

        # 克隆 Termux 的包构建仓库
        git clone https://github.com/termux/termux-packages.git
        cd termux-packages
        
        # 创建并配置 termux.properties
        cat > termux.properties << EOF
        TERMUX_APP_PACKAGE=com.termux
        TERMUX_PREFIX=/data/data/com.termux/files/usr
        TERMUX_ANDROID_HOME=${NDK}
        TERMUX_NDK_VERSION=27
        EOF
        
        # 显示配置文件内容
        cat termux.properties
        
        # 运行 setup 脚本（忽略错误）
        ./scripts/setup-ubuntu.sh || true
        
        # 确保 llvm 包目录存在
        mkdir -p packages/llvm
        
        # 创建 LLVM 构建配置
        cat > packages/llvm/build.sh << 'EOF'
        TERMUX_PKG_HOMEPAGE=https://clang.llvm.org/
        TERMUX_PKG_DESCRIPTION="Clang compiler and LLVM toolchain"
        TERMUX_PKG_LICENSE="Apache-2.0"
        TERMUX_PKG_MAINTAINER="@termux"
        TERMUX_PKG_VERSION=18.1.1
        TERMUX_PKG_REVISION=1
        TERMUX_PKG_SRCURL=https://github.com/llvm/llvm-project/releases/download/llvmorg-${TERMUX_PKG_VERSION}/llvm-project-${TERMUX_PKG_VERSION}.src.tar.xz
        TERMUX_PKG_SHA256=c56be5e9c5f3d3c750d5718332cae127403df852c3685f0ccd765531455e5e04
        TERMUX_PKG_DEPENDS="libc++, ncurses, zlib"
        TERMUX_PKG_BUILD_DEPENDS="binutils-libs, libffi-static, zlib-static"
        TERMUX_PKG_CONFLICTS="clang, libllvm"
        TERMUX_PKG_REPLACES="clang, libllvm"
        TERMUX_PKG_GROUPS="base-devel"
        EOF
        
        # 设置执行权限
        chmod +x packages/llvm/build.sh
        
        # 显示环境变量和目录结构
        echo "NDK=$NDK"
        ls -la $NDK
        
        # 构建 LLVM/Clang
        ./build-package.sh -a arm64 -f llvm

    - name: Package artifacts
      run: |
        mkdir -p artifacts
        cp termux-packages/debs/llvm*.deb artifacts/ || true
        
    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: llvm-clang-termux-arm64
        path: artifacts/*.deb
